/* This file was autogenerated at {20:20:55} - do not edit it - any edits will be overwritten! */
package frc.robot;

import edu.wpi.first.math.geometry.*;
import edu.wpi.first.math.util.Units;
import frc.robot.RobotState;
import frc.robot.subsystems.arm.Arm;
import frc.utils.configfile.StormProp;

public final class NewConstants {

    public static final class Vision {
        public static final int MaxAprilTagRotationalVelTrustDegPerSec = StormProp.getInt("MaxAprilTagRotationalVelTrustDegPerSec", 0);
        public static final int MaxAprilTagLinearVelTrustMetersPerSec = StormProp.getInt("MaxAprilTagLinearVelTrustMetersPerSec", 0);
        public static final int CameraYaw = StormProp.getInt("CameraYaw", 0);
        public static final int CameraWpiX = StormProp.getInt("CameraWpiX", 0);
        public static final int RotationalVelTrustWeight = StormProp.getInt("RotationalVelTrustWeight", 0);
        public static final int CameraWpiY = StormProp.getInt("CameraWpiY", 0);
        public static final int CameraWpiZ = StormProp.getInt("CameraWpiZ", 0);
        public static final int LinearVelTrustWeight = StormProp.getInt("LinearVelTrustWeight", 0);
        public static final int MaxAprilTagYawTrustMeters = StormProp.getInt("MaxAprilTagYawTrustMeters", 0);
        public static final int MaxTranslationDeviation = StormProp.getInt("MaxTranslationDeviation", 0);
        public static final int MaxRotationDeviation = StormProp.getInt("MaxRotationDeviation", 0);
        public static final int CameraPitch = StormProp.getInt("CameraPitch", 0);
        public static final int DistanceTrustWeight = StormProp.getInt("DistanceTrustWeight", 0);
    }

    public static final int magEncoderTicksPerRotation = StormProp.getInt("magEncoderTicksPerRotation", 0);
    public static final int bumperThickness = StormProp.getInt("bumperThickness", 0);
    public static final int onOffSolenoidChannel = StormProp.getInt("onOffSolenoidChannel", 0);
    public static final String robotName = StormProp.getString("robotName", "");
    public static final int SparkMaxFreeSpeedRPM = StormProp.getInt("SparkMaxFreeSpeedRPM", 0);
    public static final int driverobotLength = StormProp.getInt("driverobotLength", 0);
    public static final int pieceDetectorPort = StormProp.getInt("pieceDetectorPort", 0);
    public static final int LogitechControllerPort = StormProp.getInt("LogitechControllerPort", 0);
    public static final int cubeConeSolenoidChannel = StormProp.getInt("cubeConeSolenoidChannel", 0);
    public static final String debugProperties = StormProp.getString("debugProperties", "");
    public static final int StickNullSize = StormProp.getInt("StickNullSize", 0);
    public static final int CompressorModuleId = StormProp.getInt("CompressorModuleId", 0);
    public static final String override = StormProp.getString("override", "");
    public static final String navXConnection = StormProp.getString("navXConnection", "");

    public static final class Toggles {
        public static final boolean useXYArmMode = StormProp.getBoolean("useXYArmMode", false);
        public static final boolean useDrive = StormProp.getBoolean("useDrive", false);
        public static final boolean useStormNet = StormProp.getBoolean("useStormNet", false);
        public static final boolean useSecondXboxController = StormProp.getBoolean("useSecondXboxController", false);
        public static final int udpListenerPort = StormProp.getInt("udpListenerPort", 0);
        public static final boolean useLogitechController = StormProp.getBoolean("useLogitechController", false);
        public static final boolean useIntake = StormProp.getBoolean("useIntake", false);
        public static final boolean usePieceDetector = StormProp.getBoolean("usePieceDetector", false);
        public static final boolean usePneumatics = StormProp.getBoolean("usePneumatics", false);
        public static final boolean useVision = StormProp.getBoolean("useVision", false);
        public static final boolean useButtonBoard = StormProp.getBoolean("useButtonBoard", false);
        public static final boolean useNavX = StormProp.getBoolean("useNavX", false);
        public static final boolean useController = StormProp.getBoolean("useController", false);
        public static final boolean useFirstXboxController = StormProp.getBoolean("useFirstXboxController", false);
        public static final boolean useCompressor = StormProp.getBoolean("useCompressor", false);
        public static final boolean useNodeSelector = StormProp.getBoolean("useNodeSelector", false);
        public static final boolean useStatusLights = StormProp.getBoolean("useStatusLights", false);
        public static final boolean useArm = StormProp.getBoolean("useArm", false);
    }

    public static final class Drive {
        public static final int frontLeftEncoderID = StormProp.getInt("frontLeftEncoderID", 0);
        public static final int turnki = StormProp.getInt("turnki", 0);
        public static final int backRightSwivelID = StormProp.getInt("backRightSwivelID", 0);
        public static final int frontRightDriveID = StormProp.getInt("frontRightDriveID", 0);
        public static final int SparkMaxTemperatureRampLimit = StormProp.getInt("SparkMaxTemperatureRampLimit", 0);
        public static final int SparkMax550CurrentLimit = StormProp.getInt("SparkMax550CurrentLimit", 0);
        public static final int precisionSpeedScale = StormProp.getInt("precisionSpeedScale", 0);
        public static final int driveSpeedScale = StormProp.getInt("driveSpeedScale", 0);
        public static final int SparkMax550FreeSpeedRPM = StormProp.getInt("SparkMax550FreeSpeedRPM", 0);
        public static final int SparkMaxTemperatureRampThreshold = StormProp.getInt("SparkMaxTemperatureRampThreshold", 0);
        public static final int turnkd = StormProp.getInt("turnkd", 0);
        public static final int frontLeftOffsetTicks = StormProp.getInt("frontLeftOffsetTicks", 0);
        public static final int frontLeftDriveID = StormProp.getInt("frontLeftDriveID", 0);
        public static final int frontLeftSwivelID = StormProp.getInt("frontLeftSwivelID", 0);
        public static final String mk4iModuleKind = StormProp.getString("mk4iModuleKind", "");
        public static final int wheelRadiusMeters = StormProp.getInt("wheelRadiusMeters", 0);
        public static final int backRightOffsetTicks = StormProp.getInt("backRightOffsetTicks", 0);
        public static final int backLeftEncoderID = StormProp.getInt("backLeftEncoderID", 0);
        public static final int backRightEncoderID = StormProp.getInt("backRightEncoderID", 0);
        public static final int swivelEncoderTicksPerRotation = StormProp.getInt("swivelEncoderTicksPerRotation", 0);
        public static final int drivetrainWheelbaseMeters = StormProp.getInt("drivetrainWheelbaseMeters", 0);
        public static final int driveYkp = StormProp.getInt("driveYkp", 0);
        public static final int frontRightOffsetTicks = StormProp.getInt("frontRightOffsetTicks", 0);
        public static final int backLeftSwivelID = StormProp.getInt("backLeftSwivelID", 0);
        public static final int driveXkp = StormProp.getInt("driveXkp", 0);
        public static final String driveType = StormProp.getString("driveType", "");
        public static final int frontRightEncoderID = StormProp.getInt("frontRightEncoderID", 0);
        public static final int robotWidth = StormProp.getInt("robotWidth", 0);
        public static final int SparkMaxFreeSpeedRPM = StormProp.getInt("SparkMaxFreeSpeedRPM", 0);
        public static final int SparkMaxCurrentLimit = StormProp.getInt("SparkMaxCurrentLimit", 0);
        public static final int backLeftOffsetTicks = StormProp.getInt("backLeftOffsetTicks", 0);
        public static final int driveXkd = StormProp.getInt("driveXkd", 0);
        public static final int wheelMaxRPM = StormProp.getInt("wheelMaxRPM", 0);
        public static final int frontRightSwivelID = StormProp.getInt("frontRightSwivelID", 0);
        public static final int backRightDriveID = StormProp.getInt("backRightDriveID", 0);
        public static final int driveXki = StormProp.getInt("driveXki", 0);
        public static final int turnkp = StormProp.getInt("turnkp", 0);
        public static final int backLeftDriveID = StormProp.getInt("backLeftDriveID", 0);
        public static final int drivetrainTrackwidthMeters = StormProp.getInt("drivetrainTrackwidthMeters", 0);
        public static final int driveYki = StormProp.getInt("driveYki", 0);
        public static final int driveYkd = StormProp.getInt("driveYkd", 0);
    }

    public static final class Arm {
        public static final int A2Length = StormProp.getInt("A2Length", 0);
        public static final int armElbowEncoderID = StormProp.getInt("armElbowEncoderID", 0);
        public static final int xyArmSpeedScale = StormProp.getInt("xyArmSpeedScale", 0);
        public static final int intakeOutPower = StormProp.getInt("intakeOutPower", 0);
        public static final int upwardConstraint = StormProp.getInt("upwardConstraint", 0);
        public static final int armShoulderGearRatio = StormProp.getInt("armShoulderGearRatio", 0);
        public static final int armDownwardSafetyBuffer = StormProp.getInt("armDownwardSafetyBuffer", 0);
        public static final int forwardConstraint = StormProp.getInt("forwardConstraint", 0);
        public static final int armOriginX = StormProp.getInt("armOriginX", 0);
        public static final int armOriginY = StormProp.getInt("armOriginY", 0);
        public static final int armSpeedScale = StormProp.getInt("armSpeedScale", 0);
        public static final int armElbowGearRatio = StormProp.getInt("armElbowGearRatio", 0);
        public static final int xyArmManualSpeed = StormProp.getInt("xyArmManualSpeed", 0);
        public static final int armBackwardSafetyBuffer = StormProp.getInt("armBackwardSafetyBuffer", 0);
        public static final int backwardConstraint = StormProp.getInt("backwardConstraint", 0);
        public static final int armShoulderID = StormProp.getInt("armShoulderID", 0);
        public static final int intakeInPower = StormProp.getInt("intakeInPower", 0);
        public static final int A1Length = StormProp.getInt("A1Length", 0);
        public static final int armElbowEncoderOffsetTicks = StormProp.getInt("armElbowEncoderOffsetTicks", 0);
        public static final int armShoulderEncoderID = StormProp.getInt("armShoulderEncoderID", 0);
        public static final int armUpwardSafetyBuffer = StormProp.getInt("armUpwardSafetyBuffer", 0);
        public static final int chassisHeight = StormProp.getInt("chassisHeight", 0);
        public static final int armInlay = StormProp.getInt("armInlay", 0);
        public static final int armForwardSafetyBuffer = StormProp.getInt("armForwardSafetyBuffer", 0);
        public static final int armShoulderEncoderOffsetTicks = StormProp.getInt("armShoulderEncoderOffsetTicks", 0);
        public static final int intakeHoldPower = StormProp.getInt("intakeHoldPower", 0);
        public static final int gripperWheelRadius = StormProp.getInt("gripperWheelRadius", 0);
        public static final int downwardConstraint = StormProp.getInt("downwardConstraint", 0);
        public static final int angleArmSpeedScale = StormProp.getInt("angleArmSpeedScale", 0);
        public static final int intakeMotorID = StormProp.getInt("intakeMotorID", 0);
        public static final int armElbowID = StormProp.getInt("armElbowID", 0);
    }
}